h1. Практическое занятие 2

{{>TOC}}

Скопируйте содержимое папку %Q:\\Дизайн\Семестр 2\Разработка веб-узлов...\Практика 2\% в папку с вашим логином на диске %W:\\Дизайн\Семестр 2\Разработка веб-узлов...%

h2. Создание фотогалереи c известной высотой элементов

*Цель задания*: получить навык работы с плавающими элементами. Результат выполнения задания не должен отличаться от скриншота "gallery-1.png"|gallery-1.png

Откройте файл gallery-1.html. Изначально фотогалерея представляет собой неупорядоченый список изображений

Создайте файл стилей gallery-1.css и подключите его к файлу gallery-1.html

h3. Удаление стандартынх свойств списка

Задайте для списка _ul_ свойтства, отменяющие изначальные значения полей, отступов и маркера списка (в файле gallery-1.css)

h3. Создание фотогалереи 

Преобразуйте элемент списка _li_ в «плавающий» элемент всплывание влево). Задайте для элементов _li_ и _img_ свойства блочной модели, цвета фона и рамки руководствуюясь схемой gallery-1-schema.png 

p=. 
!gallery-1-schema.png!

Просмотрите результат в браузере, изменяя ширину окна браузера. 

h2. Создание  фотогалереи с переменной высотой элементов

*Цель задания*: рассмотреть ограничения построения сетки элементов при использованиии свойства float:left. Получить навык создания представления информации в виде масштабируемой сетки в случае неизвестной высоты элементов. Результат выполнения задания не должен отличаться от скриншота "gallery-2.png"|gallery-2.png

h3. Ограничения свойства _float_

Откройте в браузере файл gallery-2.html. Попробуйте изменять ширину браузера. Отметьте типовую проблему плавающих элементов

bq. Создание фотогалерей, страницы списка карточек товара и т.п. при использовании свойства float возможно только в случае гаранитии одинаковой высоты каждого элемента. Такую гарантию можно получить жёстко ограничив вывосту элемента в css или строгими правилами подготовки контента

h3. Использование преобразования типов

* Откройте файл gallery-2.css
* Удалите правило float:left
* Укажите для элемента _li_ тип отображения _строчно-блочный_

Просмотрите результат в браузере.

Добавьте стилевые описания для элементов _img_ и _li p_, таким образом, что бы результат не отличался от скриншота "gallery-2.png"|gallery-2.png

bq. Несмотря на большую стабильность результата, способ с преобразованием типа отображения менее универсален. Его использование требует создания отдельной таблицы стилей для браузеров Internet Explorer 6 и Mozilla Firefox 2.

h2. Разметка каркаса страницы

*Цель задания*: научиться создавать каркасы страниц, состоящие из нескольких колонок. Научиться управлять очисткой обтекания для плавающих блоков. Научиться использовать преобразования типов для создания панелей навигации.

h3. Автоформатирование кода

Откройте файл in-avalon.html. Просмотрите его в режиме отображения исходного кода. Для преобразования исходного кода страницы в удобочитаемый вид, выполните команду главного меню _Commands > Apply Source Formatting_ или нажмите кнопку «Format Source Code» на панели _Coding_

p=.

!format_source_code.png!

h3. Импортирование таблиц стилей

bq. Импортирование стилей позволяет гибко управлять таблицами стилей, подключаемыми к html-документу, а так же уменьшает количество строк в исходных файлах.

Откройте таблицу стилей, подключенную к файлу in-avalon.html и импортируйте в неё таблицу стилей _base.css_. Просмотрите изменения на странице в браузере. Если ничего не изменилось — обратитесь к преподавателю.

Структура подключения таблиц стилей представлена на рисунке ниже:

p=.

!css-linking.png!

h3. Разметка каркаса страницы

Создайте новый файл таблиц стилей и сохраните его в каталог _css_ под именем _layout.css_. Подключите файл _layout.css_ в файл _in-avalon.css_. 

Указанные ниже свойства записываются в файл _layout.css_

Изучите структуру файла in-avalon.html. Необходимо создать стилевые описания для блоков с классами «header», «wrapper», «logo», «top-menu», «left-menu», «content-wrapper», «sidebar», «content», «footer» таким образом, что бы расположене элементов страницы соответствовало схеме in-avalon-schema.png

p=.
!in-avalon-schema.png!

h4. «Шапка» страницы

* Определите самостоятельно и задайте необходимые свойства для классов «.header», «.logo» и «.top-menu»
* Высота шапки должна зависеть от содержимого, т.е. нельзя указывать высоту при помощи css-свойства height
* Цвет фона - #3B5998
* Цвет рамки снизу - #1D4088
* Логотип должен быть прижат к левому краю, рамка и отступ задаются свойствами css
* Меню должно быть прижато к правому краю
* Для запрета «вываливания» элементов меню за границы шапки используйте свойство overflow
* При необходимости задайте отступы по вертикали

h4. «Подвал» страницы

* Задайте необходимые свойства для класса «.footer». Цвет рамки - такой же, как и у «шапки»

h4. Выравнивание блоков по центру

* Выравннивание блоков разметки по центру обеспечивается заданием фиксированой ширины и автоматического расчёта полей по горизонтали для класса «.wrapper»

h4. Создание колонок

* Раскладка основного блока информации в три колонки осуществляется с применение плавающих блоков.
* Необходимые размеры указаны на схеме in-avalon-content-schema.png
* Обратите особое внимание на расположение рамок блока _.content-wrapper_

p=.
!in-avalon-content-schema.png!

* Сместите блок _.sidebar_ вниз на 40px, используя свойства относительного позиционирования

Откройте файл _in-avalon.html_ в браузере и сравните результат со скриншотом in-avalon-layout-done.png

h3. Форматирование содержимого

Создайте новый файл таблиц стилей и сохраните его в каталог _css_ под именем _content.css_. Подключите файл _content.css_ в файл _in-avalon.css_. 

Указанные ниже свойства записываются в файл _content.css_

h4. Левое меню

* Задайте необходимые свойства для элементов, расположенных внутри блока «.left-menu», руководствуюясь схемой left-menu-scheme.png

p=.
!left-menu-scheme.png!

* Для запрета «вываливания» логотипа DW за границы блока _.v-card_  используйте свойство overflow

h4. Колонка _sidebar_

* Задайте необходимые свойства для элементов, расположенных внутри блока «.sidebar», руководствуюясь схемой sidebar-scheme.png

p=.
!left-menu-scheme.png!

h4. Список литературы


* Задайте необходимые свойства для элементов «.item» и элементов, расположенных внутри блока «.item», руководствуюясь схемой item-scheme.png

p=.
!item-scheme.png!

Откройте файл _in-avalon.html_ в браузере и сравните результат со скриншотом in-avalon-content-done.png

h3. Оформление панелей навигации

Создайте новый файл таблиц стилей и сохраните его в каталог _css_ под именем _nav.css_. Подключите файл _nav.css_ в файл _in-avalon.css_. 

Указанные ниже свойства записываются в файл _nav.css_

h4. Меню _top-menu_

* Удалите стандартные значения свойств для списка внутри блока с классом _top-menu_
* Преобразуйте элементы списка к строковому отображению
* Задайте дополнительные свойства элементам списка и ссылкам, руководствуюясь схемой _top-menu-scheme.png_

!top-menu-scheme.png!

h4. Меню _left-menu_

* Удалите стандартные значения свойств для списка внутри блока с классом _left-menu_
* Преобразуйте ссылки внутри блока с классом _left-menu_ к блочному отображению
* Задайте дополнительные свойства элементам списка и ссылкам, руководствуюясь схемой _left-menu-scheme.png_

!top-menu-scheme.png!

h4. Меню _sidebar_

* Элементы меню в блоке с классом _sidebar_ должны выглядеть также, как и элементы в блоке с классом _left-menu_. Используйте селектор группировки

Откройте файл _in-avalon.html_ в браузере и сравните результат со скриншотом in-avalon-done.png

h2. Использование свойств позиционирования

*Цель задания*: ознакомиться с техникой абсолютного позиционирования, усвоить понятие начального контейнера

Необходимо добавьть метки «новинка» для некоторых товаров в интернет-магазине. См. скриншот ozon.png

* Откройте файл _ozon.html_, ознакомьтесь со структурой разметки
* Переключитесь к файлу _ozon.css_ и сделайте невидимыми элементы span, расположенные внутри элемента li (используйте контектстный селектор)
* Оформите элементы span, расположенные внутри элементов с классом _new_, как абсолютно позиционированные элементы. В качестве фона укажите изображение _img/ozon/new.png_. Размеры элемента укажите равными размеру фонового изображения. Координаты элемента укажите в соответствии со схемой ozon-scheme.png

!ozon-scheme.png!

Откройте файл _ozon.html_ в браузере и просмотрите результат.

* Измените свойства элемента _li_ таким образом, что бы он стал начальным контейнером для элементов _span_

Откройте файл _ozon.html_ в браузере и просмотрите результат.

* Измените свойства элемента списка таким образом, что бы результат не отличался от скриншота ozon.png

h2. Использование нестандартных свойств

*Цель задания*: Расширить знания об области применения абсолютно позиционированных элементов. Ознакомиться со способами задания прозрачности элементов средствами CSS.

Результат работы представлен на скриншоте bigphoto.png

h3. Перекрытие слоёв

* Откройте файл bigphoto.html и ознакомьтесь со структурой разметки
* Переключитесь в файл bigphoto.css
* Для элемента с классом _darkbox_ укажите свойства абсолютного позицонирования в соответствии со схемой bigphoto-scheme.png. Не забудьте указать начальные значения ширины и высоты для элемента _body_

p=.
!bigphoto-scheme-dakbox.png!

Просмотрите результат в браузере

* Задайте для блока с классом _darkbox_ значени положение в «стопке» слоёв больше ноля
* Задайте для классов «image» и «title» свойства позиционирования и размеры, руководствуюясь схемой bigphoto-scheme-image.png

p=.
!bigphoto-scheme-image.png!

Просмотрите результат в браузере

h3. Задание прозрачности

bq. Существует два способа задания прозрачности элементов в css: при помощи свойства opacity и с использованием цветовой модель RGBA. Свойство opacity поддерживается старыми версиями браузеров, но при его использовании нужно внимательно следить за вложенностью элементов. Цветовая модель RGBA поддерживается всеми современными версиями браузеров

Для задания прозрачности блоку .darkbox задайте ему слудующие стилевые правила:

<pre><code class="css">background:rgba(0,0,0,0.7);
  filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000,endColorstr=#99000000); </code></pre>
  
Второе свойство необходимо для того, что бы прозрачность работала в браузере Internet Explorer

h2. Домашнее задание


h2. Домашнее задание

* Доделать практическую работу 2
* Выполнить [[Домашнее_задание_2]]